options = {
    propertyServiceAddress : "", // Адрес сервиса, ответственного за единицы измерения
    propertyName : "",  // Название той величины, которую будем измерять, например длина, угол, температура
    units : [           // Массив возможных единиц измерения искомого свойства
        {
            measure : "",           // единица измерения, например, градусы Цельсия или Кельвина
            minValue: undefined,    // минимальное значение, по умолчанию не задано
            maxValue: undefined,    // максимальное значение, по умолчанию не задано
            assumedValue: undefined,// предполагаемое значение, если пользователь не изменял значение элемента
            /**
             * Точность, выраженная количеством десятичных знаков после запятой.
             * Значение 0 означает целое число
             * Значение -1 означает отсутствие округления, значение хранится как есть
             */
            precision: -1
        }
    ],
    /**
     *
     * @param propertyServiceAddress {string} Адрес сервиса, ответственного за единицы измерения
     * @param property  {string} Имя свойства, связанное с виджетом. Является ключом для поиска единиц измерения в случае дублирующихся наименований.
     * @param oldUnit   {string} Имя текущей единицы измерения свойства. Является ключом для поиска правила перевода значения.
     * @param newUnit   {string} Имя новой единицы измерения свойства. Последний элемент ключа для правила перевода значения.
     * @param magnitude {number} Само значение для перевода
     *
     * @return {number} Значение, выраженное в новых единицах измерения
     */
    transform: function (propertyServiceAddress, property, oldUnit, newUnit, magnitude) { }
};